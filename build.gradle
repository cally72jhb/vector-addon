plugins {
	id 'fabric-loom' version '1.6-SNAPSHOT'
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenCentral()
	mavenLocal()

	maven { url "https://maven.meteordev.org/releases"}
	maven { url "https://maven.meteordev.org/snapshots" }
	maven { url 'https://jitpack.io' }
}

configurations {
	extraLibs
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_version}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Meteor Client

	modImplementation("meteordevelopment:meteor-client:${project.meteor_version}-SNAPSHOT")

	configurations.implementation.extendsFrom(configurations.extraLibs)
}

loom {
	accessWidenerPath = file("src/main/resources/vector-addon.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version,
				"mc_version": project.minecraft_version,
				"gh_hash": (System.getenv("GITHUB_SHA") ?: "")
	}
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}

	from {
		configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

tasks.withType(Jar) {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	def targetVersion = 21

	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}
